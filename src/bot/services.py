import asyncio

from aiogram import Bot
from aiogram.exceptions import TelegramForbiddenError
from aiogram.types import Message
from aiogram.utils.markdown import hlink
from sqlalchemy import Result, delete, select

from bot.models import ChatID
from core import async_session
from scraper import Article


async def save_chat_id_to_db(chat_id: int):
    """
    –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–∞—Ç –∞–π–¥–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –∫–æ–º–∞–Ω–¥—ã /start –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –±–æ—Ç–∞.
    """
    async with async_session() as session:
        if not (
            await session.execute(
                select(ChatID).where(ChatID.chat_id == chat_id)
            )
        ).scalar_one_or_none():
            new_chat_id = ChatID(chat_id=chat_id)
            session.add(new_chat_id)
            await session.commit()


async def get_chat_ids():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —á–∞—Ç –∞–π–¥–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å—Å—ã–ª–∫–∏ –Ω–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π.
    """
    async with async_session() as session:
        result: Result = await session.execute(select(ChatID.chat_id))
        return result.scalars().all()


async def delete_chat_id(chat_id):
    """
    –£–¥–∞–ª–µ–Ω–∏–µ —á–∞—Ç –∞–π–¥–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –æ—à–∏–±–∫–µ TelegramForbiddenError,
    —Ç–æ –µ—Å—Ç—å –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.
    """
    async with async_session() as session:
        await session.execute(delete(ChatID).where(ChatID.chat_id == chat_id))
        await session.commit()


async def get_articles_from_db():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª–∞–≥–æ–≤ –≤—Å–µ—Ö (—Ç—Ä–µ—Ö) –Ω–æ–≤–µ–π—à–∏—Ö —Å—Ç–∞—Ç–µ–π, —Ö—Ä–∞–Ω—è—â–∏—Ö—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–µ—Ä–≤—ã—Ö —Å—Ç–∞—Ç–µ–π –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞.
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ send_initial_articles.
    """
    async with async_session() as session:
        result: Result = await session.execute(
            select(Article.slug).order_by(Article.created_at)
        )
        return result.scalars().all()


async def send_article(chat_id: int | str, slug: str, bot: Bot):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–¥–Ω–æ–π —Å—Ç–∞—Ç—å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±–æ—Ç–∞."""
    try:
        await bot.send_message(
            chat_id=chat_id,
            text=hlink(
                url=f"https://www.the-race.com/formula-1/{slug}/", title="üèéÔ∏è"
            ),
        )
    except TelegramForbiddenError:
        await delete_chat_id(chat_id=chat_id)


async def send_initial_articles(message: Message):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç—Ä–µ—Ö –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å—Ç–∞—Ç–µ–π. –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–∑–æ–≤–µ
    –∫–æ–º–∞–Ω–¥—ã /start –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –±–æ—Ç–∞.
    """
    slugs = await get_articles_from_db()
    for slug in slugs:
        await send_article(chat_id=message.chat.id, slug=slug, bot=message.bot)


async def send_new_article(slug: str, bot: Bot):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–µ–π—à–µ–π —Å—Ç–∞—Ç—å–∏ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –±–æ—Ç–∞.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –æ–±—â–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ check_for_updates.
    """
    chat_ids = await get_chat_ids()
    for chat_id in chat_ids:
        await send_article(chat_id=chat_id, slug=slug, bot=bot)
        await asyncio.sleep(0.05)
